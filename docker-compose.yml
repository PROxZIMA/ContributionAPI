version: "3.9"

services:
  portainer:
    image: portainer/portainer-ce:lts
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "3420:9443"
    networks:
      - contribution-network

  caddy:
    image: caddy:2.8-alpine
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
    environment:
      - TZ=UTC
    depends_on:
      - frontend
      - backend-hub
    networks:
      - contribution-network

  frontend:
    image: ghcr.io/proxzima/contribution-manager-app:latest
    restart: unless-stopped
    container_name: frontend
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOSTNAME=0.0.0.0
      - NEXT_TELEMETRY_DISABLED=1
      - GOOGLE_APPLICATION_CREDENTIALS=/app/.secrets/google-credentials.json
    volumes:
      - ./.secrets/google-credentials.json:/app/.secrets/google-credentials.json:ro
    expose:
      - "3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - contribution-network

  valkey:
    image: valkey/valkey:8.0-alpine
    container_name: valkey
    restart: unless-stopped
    command: valkey-server --maxmemory 256mb --maxmemory-policy allkeys-lru --appendonly yes --appendfsync everysec
    ports:
      - "6379:6379"
    volumes:
      - valkey_data:/data
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - contribution-network

  backend-hub:
    image: ghcr.io/proxzima/contribution-hub-api:latest
    restart: unless-stopped
    container_name: backend-hub
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - DOTNET_RUNNING_IN_CONTAINER=true
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=true
      - GOOGLE_APPLICATION_CREDENTIALS=/app/.secrets/google-credentials.json
    volumes:
      - ./.secrets/google-credentials.json:/app/.secrets/google-credentials.json:ro
    depends_on:
      backend-github:
        condition: service_healthy
      backend-gitlab:
        condition: service_healthy
      backend-azuredevops:
        condition: service_healthy
    expose:
      - "5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - contribution-network

  backend-github:
    image: ghcr.io/proxzima/contribution-github-api:latest
    restart: unless-stopped
    container_name: backend-github
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - DOTNET_RUNNING_IN_CONTAINER=true
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=true
    depends_on:
      valkey:
        condition: service_healthy
    expose:
      - "5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - contribution-network

  backend-gitlab:
    image: ghcr.io/proxzima/contribution-gitlab-api:latest
    restart: unless-stopped
    container_name: backend-gitlab
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - DOTNET_RUNNING_IN_CONTAINER=true
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=true
    depends_on:
      valkey:
        condition: service_healthy
    expose:
      - "5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - contribution-network

  backend-azuredevops:
    image: ghcr.io/proxzima/contribution-azuredevops-api:latest
    restart: unless-stopped
    container_name: backend-azuredevops
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - DOTNET_RUNNING_IN_CONTAINER=true
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=true
    depends_on:
      valkey:
        condition: service_healthy
    expose:
      - "5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - contribution-network

volumes:
  valkey_data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local
  portainer_data:
    driver: local

networks:
  contribution-network:
    driver: bridge
