# Dockerfile for GitLab Contribution API
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# Install curl for runtime health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Copy common project first
COPY ["src/Contribution.Common/Contribution.Common.csproj", "src/Contribution.Common/"]

# Copy GitLab API project
COPY ["src/Contribution.GitLab/Contribution.GitLab.csproj", "src/Contribution.GitLab/"]

# Restore dependencies
RUN dotnet restore "src/Contribution.GitLab/Contribution.GitLab.csproj"

# Copy source files
COPY ["src/Contribution.Common/", "src/Contribution.Common/"]
COPY ["src/Contribution.GitLab/", "src/Contribution.GitLab/"]

# Build and publish
WORKDIR "/src/src/Contribution.GitLab"
RUN dotnet publish "Contribution.GitLab.csproj" -c Release -o /app/publish /p:UseAppHost=false

FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS runtime
WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Copy published files
COPY --from=build /app/publish .

# Set ownership
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Configure ASP.NET Core
ENV ASPNETCORE_URLS=http://+:5000
ENV ASPNETCORE_ENVIRONMENT=Production
ENV DOTNET_RUNNING_IN_CONTAINER=true
ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=true

EXPOSE 5000

HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:5000/health || exit 1

ENTRYPOINT ["dotnet", "Contribution.GitLab.dll"]
