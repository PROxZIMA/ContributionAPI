name: Hub Contribution API - VPS

# on:
#   push:
#     branches: [ master, main ]
#     paths:
#       - 'src/Contribution.Common/**'
#       - 'src/Contribution.Hub/**'
#       - 'deploy/Dockerfile.c-hub-api'
#       - '.github/workflows/Contribution.Hub.VPS.yaml'

env:
  SERVICE_NAME: backend-hub
  IMAGE: ghcr.io/${{ github.repository_owner }}/contribution-hub-api
  DOCKERFILE: deploy/Dockerfile.c-hub-api
  DOTNET_VERSION: '9.0.x'

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multiarch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            google_credentials=${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            echo "Deploying Hub API service..."
            
            # Login to GHCR
            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Navigate to app directory
            cd /srv/app || exit 1
            
            # Create Google credentials file if it doesn't exist
            if [ ! -f "/srv/app/.secrets/google-credentials.json" ]; then
              mkdir -p /srv/app/.secrets
              echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}" | base64 --decode > /srv/app/.secrets/google-credentials.json
              chmod 600 /srv/app/.secrets/google-credentials.json
            fi
            
            # Pull latest images
            docker compose pull ${{ env.SERVICE_NAME }}
            
            # Restart the service
            docker compose up -d ${{ env.SERVICE_NAME }}
            
            # Clean up old images
            docker image prune -f
            
            echo "Hub API service deployed successfully!"